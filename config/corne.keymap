/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        tapping_term: tapping-term {
            compatible = "zmk,tapping-term";
            tapping-term-ms = <500>; /* Ajustar a 500 ms */
        };
    };

    macros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LGUI &kp NUMBER_4>;
            label = "SCREENSHOT";
        };

        open_question_mark: open_question_mark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(QMARK)>;
            label = "OPEN_QUESTION_MARK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL       &kp MINUS       &kp BACKSPACE
&trans  &kp LEFT_ALT  &trans        &trans            &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0    &kp UP_ARROW    &kp DELETE
&trans  &kp C_PREV    &kp C_NEXT    &kp C_PLAY_PAUSE  &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
                                    &trans            &trans                &trans                   &trans        &trans        &trans
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL       &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LPAR        &kp RPAR        &kp DEL
&trans  &kp BACKSLASH  &trans  &trans    &trans    &trans       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0    &kp UP_ARROW    &kp GRAVE
&trans  &trans         &trans  &trans    &trans    &trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
                               &trans    &trans    &trans       &trans        &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans      &trans      &trans  &trans  &trans    &trans            &trans            &trans             &trans  &trans  &trans
&trans  &bt BT_PRV  &bt BT_NXT  &trans  &trans  &trans    &trans            &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &trans  &trans  &trans
&trans  &trans      &trans      &trans  &trans  &trans    &ext_power EP_ON  &trans            &trans             &trans  &trans  &trans
                                &trans  &trans  &trans    &trans            &trans            &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        extra {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
